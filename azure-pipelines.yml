trigger:
  branches:
    include:
      - master
      - develop
      - feature/*
  paths:
    exclude:
      - "*.md"
      - .travis.yml
      - appveyor.yml

pr:
  branches:
    include:
      - master
      - develop
      - feature/*

jobs:
- job: windows
  displayName: 'Windows'
  pool:
    vmImage: 'VS2017-Win2016'

  strategy:
    maxParallel: 4
    matrix:
      Win32_Debug:
        BuildPlatform: 'Win32'
        Configuration: 'Debug'
      Win32_Release:
        BuildPlatform: 'Win32'
        Configuration: 'Release'
      Win64_Debug:
        BuildPlatform: 'x64'
        Configuration: 'Debug'
      Win64_Release:
        BuildPlatform: 'x64'
        Configuration: 'Release'

  steps:
  - template: ci/azure-pipelines/template-build-unittest.yml


- job: SonarQube
  displayName: 'SonarQube'
  pool:
    vmImage: 'VS2017-Win2016'

  strategy:
    maxParallel: 4
    matrix:
      Win32_Debug:
        BuildPlatform: 'Win32'
        Configuration: 'Debug'
      Win32_Release:
        BuildPlatform: 'Win32'
        Configuration: 'Release'
      Win64_Debug:
        BuildPlatform: 'x64'
        Configuration: 'Debug'
      Win64_Release:
        BuildPlatform: 'x64'
        Configuration: 'Release'

  # https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&tabs=yaml%2Cbatch
  variables:
    SONAR_QUBE: Yes

  # set condition    at https://docs.microsoft.com/ja-jp/azure/devops/pipelines/process/conditions?view=azure-devops&viewFallbackFrom=vsts&tabs=yaml
  # see Build.Reason at https://docs.microsoft.com/ja-jp/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
  condition: eq(variables['Build.Reason'], 'Schedule')

  steps:
  - template: ci/azure-pipelines/template-build-sonarqube.yml

- job: cppcheck
  displayName: 'Windows cppcheck'
  pool:
    vmImage: 'VS2017-Win2016'

  strategy:
    maxParallel: 2
    matrix:
      Win32_Release:
        BuildPlatform: 'Win32'
        Configuration: 'Release'
      Win64_Release:
        BuildPlatform: 'x64'
        Configuration: 'Release'

  steps:
  - template: ci/azure-pipelines/template-cppcheck.yml

- job: doxygen
  displayName: 'Windows doxygen'
  pool:
    vmImage: 'VS2017-Win2016'

  strategy:
    maxParallel: 2
    matrix:
      Win32_Release:
        BuildPlatform: 'Win32'
        Configuration: 'Release'
      Win64_Release:
        BuildPlatform: 'x64'
        Configuration: 'Release'

  steps:
  - template: ci/azure-pipelines/template-doxygen.yml

- job: checkEncoding
  displayName: 'Windows checkEncoding'
  pool:
    vmImage: 'VS2017-Win2016'

  steps:
  - template: ci/azure-pipelines/template-checkEncoding.yml

